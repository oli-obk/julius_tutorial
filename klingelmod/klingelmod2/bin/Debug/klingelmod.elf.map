Archive member included because of file (symbol)

/usr/avr/lib/avr5/libc.a(exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o (exit)
/usr/avr/lib/avr5/libc.a(strcmp.o)
                              obj/Debug/main.o (strcmp)
/usr/avr/lib/avr5/libc.a(eerd_byte_atmega32.o)
                              obj/Debug/dtmf.o (__eerd_byte_m32)
/usr/lib/gcc/avr/4.7.2/libgcc.a(_exit.o)
                              /usr/avr/lib/avr5/libc.a(exit.o) (_exit)
/usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
                              obj/Debug/main.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.2/libgcc.a(_clear_bss.o)
                              obj/Debug/avr/uart.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

Nummersafe          0x2               obj/Debug/dtmf.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
LOAD obj/Debug/avr/uart.o
LOAD obj/Debug/dtmf.o
LOAD obj/Debug/main.o
LOAD /usr/avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/libm.a
LOAD /usr/lib/gcc/avr/4.7.2/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xa04
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000054        0x8 obj/Debug/dtmf.o
                0x0000000000000054                samplesprung
 .progmem.data  0x000000000000005c       0x40 obj/Debug/main.o
                0x000000000000009c                . = ALIGN (0x2)
                0x000000000000009c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000009c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000009c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000009c                __ctors_start = .
 *(.ctors)
                0x000000000000009c                __ctors_end = .
                0x000000000000009c                __dtors_start = .
 *(.dtors)
                0x000000000000009c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000009c        0x0 /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
                0x000000000000009c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000009c        0xc /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000a8       0x18 /usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
                0x00000000000000a8                __do_copy_data
 .init4         0x00000000000000c0       0x10 /usr/lib/gcc/avr/4.7.2/libgcc.a(_clear_bss.o)
                0x00000000000000c0                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000d0        0x8 /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000000000000d8        0x4 /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
                0x00000000000000d8                __vector_1
                0x00000000000000d8                __vector_12
                0x00000000000000d8                __bad_interrupt
                0x00000000000000d8                __vector_6
                0x00000000000000d8                __vector_3
                0x00000000000000d8                __vector_11
                0x00000000000000d8                __vector_17
                0x00000000000000d8                __vector_19
                0x00000000000000d8                __vector_7
                0x00000000000000d8                __vector_5
                0x00000000000000d8                __vector_4
                0x00000000000000d8                __vector_9
                0x00000000000000d8                __vector_2
                0x00000000000000d8                __vector_15
                0x00000000000000d8                __vector_8
                0x00000000000000d8                __vector_10
                0x00000000000000d8                __vector_16
                0x00000000000000d8                __vector_18
                0x00000000000000d8                __vector_20
 .text          0x00000000000000dc      0x2cc obj/Debug/avr/uart.o
                0x00000000000000dc                __vector_13
                0x0000000000000176                __vector_14
                0x00000000000001fc                uart_init
                0x000000000000026e                uart_getc
                0x00000000000002c2                uart_putc
                0x0000000000000316                uart_puts
                0x0000000000000356                uart_puts_p
 .text          0x00000000000003a8      0x3ce obj/Debug/dtmf.o
                0x00000000000003a8                dtmf_init
                0x00000000000003d2                get_dtmfdone
                0x00000000000003ec                dtmf_out
                0x000000000000041e                dtmf_nextzahl
                0x0000000000000600                ISR
 .text          0x0000000000000776      0x262 obj/Debug/main.o
                0x0000000000000798                main
 .text          0x00000000000009d8        0x0 /usr/avr/lib/avr5/libc.a(exit.o)
 .text          0x00000000000009d8        0x0 /usr/avr/lib/avr5/libc.a(strcmp.o)
 .text          0x00000000000009d8        0x0 /usr/avr/lib/avr5/libc.a(eerd_byte_atmega32.o)
 .text          0x00000000000009d8        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_exit.o)
 .text          0x00000000000009d8        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
 .text          0x00000000000009d8        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_clear_bss.o)
                0x00000000000009d8                . = ALIGN (0x2)
 *(.text.*)
 .text.avr-libc
                0x00000000000009d8        0x6 /usr/avr/lib/avr5/libc.a(exit.o)
                0x00000000000009d8                exit
 .text.avr-libc
                0x00000000000009de       0x12 /usr/avr/lib/avr5/libc.a(strcmp.o)
                0x00000000000009de                strcmp
 .text.avr-libc
                0x00000000000009f0       0x10 /usr/avr/lib/avr5/libc.a(eerd_byte_atmega32.o)
                0x00000000000009f0                __eerd_byte_m32
 .text.libgcc.mul
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_clear_bss.o)
                0x0000000000000a00                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000a00        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_exit.o)
                0x0000000000000a00                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000a00        0x4 /usr/lib/gcc/avr/4.7.2/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000a04                _etext = .

.data           0x0000000000800060       0x1a load address 0x0000000000000a04
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
 .data          0x0000000000800060        0x0 obj/Debug/avr/uart.o
 .data          0x0000000000800060        0x0 obj/Debug/dtmf.o
 .data          0x0000000000800060        0x0 obj/Debug/main.o
 .data          0x0000000000800060        0x0 /usr/avr/lib/avr5/libc.a(exit.o)
 .data          0x0000000000800060        0x0 /usr/avr/lib/avr5/libc.a(strcmp.o)
 .data          0x0000000000800060        0x0 /usr/avr/lib/avr5/libc.a(eerd_byte_atmega32.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800060       0x1a obj/Debug/main.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080007a                . = ALIGN (0x2)
                0x000000000080007a                _edata = .
                0x000000000080007a                PROVIDE (__data_end, .)

.bss            0x000000000080007a       0x50
                0x000000000080007a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080007a        0x0 /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
 .bss           0x000000000080007a       0x45 obj/Debug/avr/uart.o
 .bss           0x00000000008000bf        0x9 obj/Debug/dtmf.o
                0x00000000008000bf                durchlaufen
                0x00000000008000c1                post
                0x00000000008000c3                posh
                0x00000000008000c5                freqt
                0x00000000008000c6                freqh
                0x00000000008000c7                pause
 .bss           0x00000000008000c8        0x0 obj/Debug/main.o
 .bss           0x00000000008000c8        0x0 /usr/avr/lib/avr5/libc.a(exit.o)
 .bss           0x00000000008000c8        0x0 /usr/avr/lib/avr5/libc.a(strcmp.o)
 .bss           0x00000000008000c8        0x0 /usr/avr/lib/avr5/libc.a(eerd_byte_atmega32.o)
 .bss           0x00000000008000c8        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_exit.o)
 .bss           0x00000000008000c8        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
 .bss           0x00000000008000c8        0x0 /usr/lib/gcc/avr/4.7.2/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008000c8        0x2 obj/Debug/dtmf.o
                0x00000000008000c8                Nummersafe
                0x00000000008000ca                PROVIDE (__bss_end, .)
                0x0000000000000a04                __data_load_start = LOADADDR (.data)
                0x0000000000000a1e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000ca        0x0
                0x00000000008000ca                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000ca                PROVIDE (__noinit_end, .)
                0x00000000008000ca                _end = .
                0x00000000008000ca                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000       0x80
 *(.eeprom*)
 .eeprom        0x0000000000810000       0x80 obj/Debug/dtmf.o
                0x0000000000810000                samples
                0x0000000000810080                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1734
 *(.stab)
 .stab          0x0000000000000000      0x8dc obj/Debug/avr/uart.o
 .stab          0x00000000000008dc      0x7e0 obj/Debug/dtmf.o
                                        0x9c0 (size before relaxing)
 .stab          0x00000000000010bc      0x678 obj/Debug/main.o
                                        0x858 (size before relaxing)

.stabstr        0x0000000000000000      0xf84
 *(.stabstr)
 .stabstr       0x0000000000000000      0xf84 obj/Debug/avr/uart.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2a
 *(.comment)
 .comment       0x0000000000000000       0x2a obj/Debug/avr/uart.o
                                         0x2b (size before relaxing)
 .comment       0x0000000000000000       0x2b obj/Debug/dtmf.o
 .comment       0x0000000000000000       0x2b obj/Debug/main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(bin/Debug/klingelmod.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
ISR                                               obj/Debug/dtmf.o
Nummersafe                                        obj/Debug/dtmf.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__bss_end                                         /usr/lib/gcc/avr/4.7.2/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.7.2/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.7.2/libgcc.a(_clear_bss.o)
                                                  obj/Debug/dtmf.o
                                                  obj/Debug/avr/uart.o
__do_copy_data                                    /usr/lib/gcc/avr/4.7.2/libgcc.a(_copy_data.o)
                                                  obj/Debug/main.o
__eerd_byte_m32                                   /usr/avr/lib/avr5/libc.a(eerd_byte_atmega32.o)
                                                  obj/Debug/dtmf.o
__heap_end                                        /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__init                                            /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__stack                                           /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_1                                        /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_10                                       /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_11                                       /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_12                                       /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_13                                       obj/Debug/avr/uart.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_14                                       obj/Debug/avr/uart.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_15                                       /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_16                                       /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_17                                       /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_18                                       /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_19                                       /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_2                                        /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_20                                       /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_3                                        /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_4                                        /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_5                                        /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_6                                        /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_7                                        /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_8                                        /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_9                                        /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vector_default                                  /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
__vectors                                         /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
_exit                                             /usr/lib/gcc/avr/4.7.2/libgcc.a(_exit.o)
                                                  /usr/avr/lib/avr5/libc.a(exit.o)
dtmf_init                                         obj/Debug/dtmf.o
dtmf_nextzahl                                     obj/Debug/dtmf.o
dtmf_out                                          obj/Debug/dtmf.o
                                                  obj/Debug/main.o
durchlaufen                                       obj/Debug/dtmf.o
exit                                              /usr/avr/lib/avr5/libc.a(exit.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
freqh                                             obj/Debug/dtmf.o
freqt                                             obj/Debug/dtmf.o
get_dtmfdone                                      obj/Debug/dtmf.o
                                                  obj/Debug/main.o
main                                              obj/Debug/main.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../../avr/lib/crtm32.o
pause                                             obj/Debug/dtmf.o
posh                                              obj/Debug/dtmf.o
post                                              obj/Debug/dtmf.o
samples                                           obj/Debug/dtmf.o
samplesprung                                      obj/Debug/dtmf.o
strcmp                                            /usr/avr/lib/avr5/libc.a(strcmp.o)
                                                  obj/Debug/main.o
uart_getc                                         obj/Debug/avr/uart.o
                                                  obj/Debug/main.o
uart_init                                         obj/Debug/avr/uart.o
                                                  obj/Debug/main.o
uart_putc                                         obj/Debug/avr/uart.o
uart_puts                                         obj/Debug/avr/uart.o
uart_puts_p                                       obj/Debug/avr/uart.o
                                                  obj/Debug/main.o
